"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var node_fs_1 = require("node:fs");
var node_process_1 = require("node:process");
function main(args) {
    if (args.length !== 1) {
        console.log("Usage: generate_ast <output directory>");
        return node_process_1.default.exit(64);
    }
    var outputDir = args[0];
    defineAst(outputDir, "Expr", [
        "Binary   : Expr left, Token operator, Expr right",
        "Grouping : Expr expression",
        "Literal  : Object value",
        "Unary    : Token operator, Expr right",
    ]);
}
function defineAst(outputDir, baseName, types) {
    var path = outputDir + "/" + baseName + ".ts";
    node_fs_1.default.writeFileSync(path, "// Auto-generated by Lox. Do not edit.\n", { encoding: "utf-8" });
    node_fs_1.default.appendFileSync(path, "\n");
    node_fs_1.default.appendFileSync(path, "export class ".concat(baseName, " {"));
    node_fs_1.default.appendFileSync(path, "\n");
    types.forEach(function (type) {
        var className = type.split(":")[0].trim();
        var fields = type.split(":")[1].trim();
        defineType(path, baseName, className, fields);
    });
    node_fs_1.default.appendFileSync(path, "}");
    node_fs_1.default.appendFileSync(path, "}\n");
}
function defineType(path, baseName, className, fieldList) {
    node_fs_1.default.appendFileSync(path, "static class ".concat(className, " extends ").concat(baseName, " {"));
    node_fs_1.default.appendFileSync(path, "   ".concat(className, " (").concat(fieldList, ") {"));
    var fields = fieldList.split(", ");
    fields.forEach(function (field) {
        var name = field.split(" ")[1];
        node_fs_1.default.appendFileSync(path, "       this.".concat(name, " = ").concat(name, ";"));
    });
    node_fs_1.default.appendFileSync(path, "}");
    node_fs_1.default.appendFileSync(path, "}\n");
    fields.forEach(function (field) {
        node_fs_1.default.appendFileSync(path, "   private ".concat(field, ";"));
    });
    node_fs_1.default.appendFileSync(path, "   }");
}
main(["/Users/perepalacin/Documents/pere-repos/crafting-compilers/typescript/src/expression"]);
